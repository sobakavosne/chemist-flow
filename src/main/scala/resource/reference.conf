akka {
  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  remote {
    artery {
      transport = tcp
      maximum-frame-size = 128 KiB
      advanced {
        debug-logging = off  # Enable in application.conf for debugging
      }
    }
  }

  actor {
    debug {
      receive = on           # Enable for debugging
      lifecycle = on         # Log actor lifecycle events
      unhandled = off        # Log unhandled messages (enable in application.conf if needed)
      event-stream = off     # Log event stream subscriptions
    }
  }

  coordinated-shutdown {
    run-by-jvm-shutdown-hook = on
    phases {
      actor-system-terminate {
        timeout = 2s  # Timeout for actor system termination
      }
    }
  }
}

kafka {
  producer {
    retries = 3
    buffer.memory = 33554432  # 32 MB
    batch.size = 16384
    linger.ms = 1
    acks = "all"              # All brokers must acknowledge writes
  }

  consumer {
    enable.auto.commit = true
    auto.commit.interval.ms = 1000
    fetch.min.bytes = 1       # Minimum bytes before a fetch request is made
    fetch.max.wait.ms = 500   # Max wait time for fetch requests
    auto.offset.reset = "latest" # Default to latest for new consumers
  }
}
